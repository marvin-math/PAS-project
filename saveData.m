function [trialData, timingData] = saveData(trial,thisTrial, task, time, env, trialData, sessionID, timingData)

switch sessionID
    case 'narrowMOA'
        trialDataTmp = table([1:length(trial)]', ... % all trials
            repmat(env.subID,length(trial), 1), ... % subID, repeat nTrials times
            repmat(sessionID,length(trial), 1), ... % condition, repeat nTrials times
            [trial.nStimulus]', ...
            [trial.ObjRespPos]', ...
            [trial.respPos]', ...
            [trial.practiceTrial]', ...
            [ [trial.RTobj], repelem(NaN, length(trial)-length([trial.RTobj]) )]', ...
            [ [trial.RTpas], repelem(NaN, length(trial)-length([trial.RTpas]) )]');
        trialDataTmp.Properties.VariableNames = trialData.Properties.VariableNames;
    case 0
        trialDataTmp = table([1:length(trial)]', ... % all trials
            repmat(env.subID,length(trial), 1), ... % subID, repeat nTrials times
            repmat(sessionID,length(trial), 1), ... % condition, repeat nTrials times
            [trial.nStimulus]', ...
            [trial.ObjRespPos]', ...
            [trial.respPos]', ...
            [trial.practiceTrial]', ...
            [ [trial.RTobj], repelem(NaN, length(trial)-length([trial.RTobj]) )]', ...
            [ [trial.RTpas], repelem(NaN, length(trial)-length([trial.RTpas]) )]');
        trialDataTmp.Properties.VariableNames = trialData.Properties.VariableNames;
    case 'narrowhigh'
        trialDataTmp = table([1:length(trial)]', ... % all trials
            repmat(env.subID,length(trial), 1), ... % subID, repeat nTrials times
            repmat(sessionID,length(trial), 1), ... % condition, repeat nTrials times
            [trial.nStimulus]', ...
            [trial.ObjRespPos]', ...
            [trial.respPos]', ...
            [trial.practiceTrial]', ...
            [ [trial.RTobj], repelem(NaN, length(trial)-length([trial.RTobj]) )]', ...
            [ [trial.RTpas], repelem(NaN, length(trial)-length([trial.RTpas]) )]');
        trialDataTmp.Properties.VariableNames = trialData.Properties.VariableNames;
    case 1
        trialDataTmp = table([1:length(trial)]', ... % all trials
            repmat(env.subID,length(trial), 1), ... % subID, repeat nTrials times
            repmat(sessionID,length(trial), 1), ... % condition, repeat nTrials times
            [trial.nStimulus]', ...
            [trial.ObjRespPos]', ...
            [trial.respPos]', ...
            [trial.practiceTrial]', ...
            [ [trial.RTobj], repelem(NaN, length(trial)-length([trial.RTobj]) )]', ...
            [ [trial.RTpas], repelem(NaN, length(trial)-length([trial.RTpas]) )]');
        trialDataTmp.Properties.VariableNames = trialData.Properties.VariableNames;
end

% Add to previous data
trialData = [trialData; trialDataTmp];

%save timing data
expDiff = timingData.TimeRealFlip - timingData.TimeExpected;
timingData.timeDifference = expDiff*1000;
difference = diff(timingData.TimeExpected);
timingData.objectDurations = [difference; NaN];
writetable(timingData,fullfile(env.fileDir, 'timingLog.csv'),'Delimiter',',') 
%save trial data
writetable(trialData,fullfile(env.fileDir, 'rawData.csv'),'Delimiter',',')
save(env.outFile, 'env', 'task', 'time');